* Helper Functions
#+BEGIN_SRC js
  function $$(selector, context) {
    context = context || document;
    var elements = context.querySelectorAll(selector);
    return Array.prototype.slice.call(elements);
  }
#+END_SRC

#+BEGIN_SRC js
  function testProperty(property) {
    const root = document.documentElement;
    if (property in root.style) {
      root.classList.add(property.toLowerCase());

      return true;
    }
    root.classList.add(`no-${property.toLowerCase()}`);


    return false;
  }
  // e.g 
  testProperty('textShadow');
#+END_SRC

#+BEGIN_SRC js
  function testValue(id, value, property) {
    const dummy = document.createElement('p');
    const root = document.documentElement;

    dummy.style[property] = value;
    if (dummy.style[property]) {
      root.classList.add(id);

      return true;
    }
    root.classList.add(`no-${id}`);

    return false;
  }
  // e.g
  testValue('linearGradient', 'linear-gradient(90deg, pink, deeppink)', 'backgroundImage');
#+END_SRC

* Tips
- =currentColor=
  + It always resolves to the value of the color property
- =inherit= 
  + The inherit keyword can be used in any CSS property and it
  always corresponds to the computed value of the parent element (in
  pseudo-elements that is the element they are generated on). 

- Trust your eyes, not numbers

** On Responsive Web Design
- That is not to say that media queries are a bad practice. Used right,
  they can be indispensable. However, they should be a last resort, after
  every other attempt to make a website design flexible has failed, or when
  we want to completely change an aspect of the design in smaller/larger
  viewports (e.g., making the sidebar horizontal). 

- Consider using =em= in your media queries instead of pixels. This
  allows text zoom to trigger layout changes as necessary.

- Of course, it goes without saying that media query thresholds
  should not be dictated by specific devices, but by the design itself.

*** To avoid media queries
- Use percentages instead of fixed widths. When that’s not possible, use
  viewport-relative units (=vw, vh, vmin, vmax=), which resolve to a fraction of
  the viewport width or height.

- When you want a fixed width for larger resolutions, use =max-width=, not
 =width=, so it can still adapt to smaller ones without media queries.

- Don’t forget to set a max-width of 100% for replaced elements such as
 =img=, =object=, =video=, and =iframe=.

- When using multi-column text, specify column-width instead of
  column-count, so that you get one column only in small resolutions.

If you find yourself needing a boatload of media queries to make your
design adapt to smaller (or larger) screens, take a step back and reexamine
your code structure, because in all likelihood, responsiveness is not the only
issue there.

** 
