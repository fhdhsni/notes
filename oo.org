
To work with OOP, you should be able to identify three key
characteristics of objects:

1. The object’s behavior—what can you do with this object, or what
   methods can you apply to it?

2. The object’s state—how does the object react when you invoke those
   methods?

3. The object’s identity—how is the object distinguished from others
   that may have the same behavior and state?

-----

The most common relationships between classes are

- Dependence (“uses–a”)

- Aggregation (“has–a”):
  The aggregation, or “has–a” relationship, is easy to understand
  because it is concrete; for example, an Order object contains Item
  objects. Containment means that objects of class A contain objects
  of class B.  NOTE: Some methodologists view the concept of
  aggregation with disdain and prefer to use a more general
  “association” relationship. From the point of view of modeling, that
  is understandable. But for programmers, the “has–a” relationship
  makes a lot of sense.


- Inheritance (“is–a”)
