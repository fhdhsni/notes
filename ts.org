*** Access Modifiers

TypeScript supports access modifiers public,private and protected which determine the accessibility of a class member as shown below:

| accessibile on  | public | protected | private |
|-----------------+--------+-----------+---------|
| class           | yes    | yes       | yes     |
| class children  | yes    | yes       | no      |
| class instances | yes    | no        | no      |

#+BEGIN_SRC typescript
  class FooBase {
      public x: number;
      private y: number;
      protected z: number;
  }

  // EFFECT ON INSTANCES
  var foo = new FooBase();
  foo.x; // okay
  foo.y; // ERROR : private
  foo.z; // ERROR : protected

  // EFFECT ON CHILD CLASSES
  class FooChild extends FooBase {
      constructor() {
          super();
          this.x; // okay
          this.y; // ERROR: private
          this.z; // okay
      }
  }
#+END_SRC

*** type alias
#+BEGIN_SRC typescript
  type thing = string | number | string[] | boolean; // an alias

  let returnSth = (sth: thing) => sth;

#+END_SRC

another example
#+BEGIN_SRC typescript
  type distanceMeric = 'mh' | 'kh' | 'yd';

  function moved(distance: number, value: distanceMeric) {
      console.log(distance, value);
  }

  moved(4, 'foot');               // throws an error because 'foot' is not compatible with distanceMeric

#+END_SRC

*** Declaration Spaces
**** Type Declaration Space

The type declaration space contains stuff that can be used as a type annotation. E.g the following are a few type declarations:

#+BEGIN_SRC typescript
  class Foo { }
  interface Bar { }
  type Bas = {}

  var foo: Foo;
  var bar: Bar;
  var bas: Bas;
  
  var bar = Bar; // ERROR: "cannot find name 'Bar'"
#+END_SRC

**** Variable Declaration Space

The variable declaration space contains stuff that you can use as a variable. We saw that having class Foo contributes a type Foo to the type declaration space. Guess what?, it also contributes a variable Foo to the variable declaration space as shown below:

#+BEGIN_SRC typescript
  class Foo { }
  var someVar = Foo;
  var someOtherVar = 123;
#+END_SRC
